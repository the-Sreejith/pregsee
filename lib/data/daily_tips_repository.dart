// üéØ Dart imports:
import 'dart:developer';
// import 'dart:math';

// üì¶ Package imports:
import 'package:cloud_firestore/cloud_firestore.dart';

// üåé Project imports:
import '/Models/DailyTips.dart';

class DailyTipsRepository {
  Future<List<DailyTips>> getRandomDailyTip() async {
    // List<String> docIdList = [];
    // DailyTips _rtnValue;
    // await FirebaseFirestore.instance.doc('DailyTips/metadata').get().then((value) {
    //   docIdList = value.data()['docIdList']?.cast<String>()?.toList();
    // }).onError((error, stackTrace) {
    //   print(error);
    // });
    // if (docIdList.isNotEmpty) {
    //   await FirebaseFirestore.instance
    //       .doc('DailyTips/${_getRandomIdFromList(docIdList)}')
    //       .get()
    //       .then((value) {
    //         _rtnValue = DailyTips.fromData(value.data());
    //       })
    //       .onError((error, stackTrace) => null);
    // }
    // return _rtnValue;
    List<DailyTips> _rtnValue = [];
    await FirebaseFirestore.instance
        .collection('DailyTips')
        .get()
        .then((value) {
      value.docs.forEach((element) {
        _rtnValue.add(DailyTips.fromData(element.data()));
      });
    }).onError((error, stackTrace) {
      log('${error.toString()} \n Happed in Daily tips repository ');
    });
    return _rtnValue;
  }

  setDailyTip() async {
    FirebaseFirestore.instance
        .doc('DailyTips/001')
        .set(repoData)
        .then((value) => print('001 updated successfully'));
    FirebaseFirestore.instance
        .doc('DailyTips/002')
        .set(repoData)
        .then((value) => print('001 updated successfully'));
    FirebaseFirestore.instance
        .doc('DailyTips/003')
        .set(repoData)
        .then((value) => print('001 updated successfully'));
    FirebaseFirestore.instance
        .doc('DailyTips/004')
        .set(repoData)
        .then((value) => print('001 updated successfully'));
    FirebaseFirestore.instance
        .doc('DailyTips/005')
        .set(repoData)
        .then((value) => print('001 updated successfully'));
  }

  // String _getRandomIdFromList(List<String> list) {
  //   final random = new Random();
  //   var i = random.nextInt(list.length);
  //   return list[i];
  // }
}

// const repoData =  {
//   "heading":"‡¥ï‡µÅ‡¥û‡µç‡¥û‡¥ø‡¥®‡µç‡¥±‡µÜ ‡¥Ö‡¥®‡¥ï‡µç‡¥ï‡¥ô‡µç‡¥ô‡µæ ‡¥é‡¥£‡µç‡¥£‡µÅ‡¥®‡µç‡¥® ‡¥µ‡¥ø‡¥ß‡¥Ç",
//   "contents":[
//     "‡¥ó‡µº‡¥≠‡¥§‡µç‡¥§‡¥ø‡µª‡¥±‡µÜ ‡¥Ö‡¥µ‡¥∏‡¥æ‡¥®‡¥ò‡¥ü‡µç‡¥ü‡¥§‡µç‡¥§‡¥ø‡µΩ ‡¥ï‡µÅ‡¥û‡µç‡¥û‡¥ø‡µª‡¥±‡µÜ ‡¥ö‡¥≤‡¥®‡¥ô‡µç‡¥ô‡µæ ‡¥é‡¥£‡µç‡¥£‡¥ø ‡¥®‡µã‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡¥§‡µç ‡¥µ‡¥≥‡¥∞‡µÜ ‡¥™‡µç‡¥∞‡¥ß‡¥æ‡¥®‡¥™‡µç‡¥™‡µÜ‡¥ü‡µç‡¥ü ‡¥í‡¥®‡µç‡¥®‡¥æ‡¥£‡µç! ‡¥á‡¥§‡µç ‡¥ï‡µÅ‡¥û‡µç‡¥û‡¥ø‡µª‡¥±‡µÜ ‡¥Ü‡¥∞‡µã‡¥ó‡µç‡¥Ø‡¥∏‡µç‡¥•‡¥ø‡¥§‡¥ø ‡¥Æ‡¥®‡¥∏‡µç‡¥∏‡¥ø‡¥≤‡¥æ‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡¥§‡¥ø‡¥®‡µç ‡¥µ‡¥≥‡¥∞‡µÜ‡¥Ø‡¥ß‡¥ø‡¥ï‡¥Ç ‡¥∏‡¥π‡¥æ‡¥Ø‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ.",
//     "‡¥®‡¥≤‡µç‡¥≤ ‡¥Ü‡¥∞‡µã‡¥ó‡µç‡¥Ø‡¥Æ‡µÅ‡¥≥‡µç‡¥≥ ‡¥ï‡µÅ‡¥ü‡µç‡¥ü‡¥ø‡¥ï‡µæ, ‡¥ó‡µº‡¥≠‡¥æ‡¥∂‡¥Ø‡¥§‡µç‡¥§‡¥ø‡¥®‡µÅ‡¥≥‡µç‡¥≥‡¥ø‡µΩ ‡¥ï‡¥ø‡¥ü‡¥®‡µç‡¥®‡µç ‡¥®‡¥®‡µç‡¥®‡¥æ‡¥Ø‡¥ø ‡¥ö‡¥≤‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡µÅ. ‡¥è‡¥§‡µÜ‡¥ô‡µç‡¥ï‡¥ø‡¥≤‡µÅ‡¥Ç ‡¥§‡¥∞‡¥§‡µç‡¥§‡¥ø‡µΩ ‡¥ï‡µÅ‡¥¥‡¥™‡µç‡¥™‡¥Æ‡µÅ‡¥£‡µç‡¥ü‡µÜ‡¥ô‡µç‡¥ï‡¥ø‡µΩ, ‡¥ï‡µÅ‡¥û‡µç‡¥û‡¥ø‡¥®‡µç ‡¥µ‡¥≥‡¥∞‡µÜ ‡¥ï‡µÅ‡¥±‡¥ö‡µç‡¥ö‡µç ‡¥Ö‡¥®‡¥ï‡µç‡¥ï‡¥ô‡µç‡¥ô‡¥≥‡µá ‡¥â‡¥£‡µç‡¥ü‡¥æ‡¥µ‡µÅ‡¥ï‡¥Ø‡µÅ‡¥≥‡µç‡¥≥‡µÇ.",
//     "‡¥ï‡µÅ‡¥û‡µç‡¥û‡¥ø‡µª‡¥±‡µÜ ‡¥ö‡¥≤‡¥®‡¥ô‡µç‡¥ô‡µæ ‡¥§‡¥æ‡¥¥‡µÜ ‡¥ï‡¥æ‡¥£‡µÅ‡¥Ç ‡¥µ‡¥ø‡¥ß‡¥Ç ‡¥é‡¥£‡µç‡¥£‡¥æ‡¥Ç.",
//     "‡¥®‡¥ø‡¥ô‡µç‡¥ô‡µæ ‡¥∞‡¥æ‡¥µ‡¥ø‡¥≤‡µÜ ‡¥â‡¥£‡µº‡¥®‡µç‡¥®‡¥§‡¥ø‡¥®‡µÅ‡¥∂‡µá‡¥∑‡¥Ç, ‡¥â‡¥ö‡µç‡¥ö‡¥Ø‡µç‡¥ï‡µç‡¥ï‡µç 12 ‡¥Æ‡¥£‡¥ø ‡¥µ‡¥∞‡µÜ ‡¥ï‡µÅ‡¥±‡¥û‡µç‡¥û‡¥§‡µç ‡¥™‡¥§‡µç‡¥§‡µç ‡¥Ö‡¥®‡¥ï‡µç‡¥ï‡¥ô‡µç‡¥ô‡µæ ‡¥é‡¥£‡µç‡¥£‡¥æ‡µª ‡¥ï‡¥¥‡¥ø‡¥Ø‡µÅ‡¥Ç.",
//     "12 ‡¥Æ‡¥£‡¥ø ‡¥Æ‡µÅ‡¥§‡µΩ ‡¥µ‡µà‡¥ï‡µÅ‡¥®‡µç‡¥®‡µá‡¥∞‡¥Ç 6 ‡¥Æ‡¥£‡¥ø ‡¥µ‡¥∞‡µÜ‡¥Ø‡µÅ‡¥≥‡µç‡¥≥ ‡¥∏‡¥Æ‡¥Ø‡¥§‡µç‡¥§‡µç, ‡¥µ‡µÄ‡¥£‡µç‡¥ü‡µÅ‡¥Ç 10 ‡¥§‡¥µ‡¥£‡¥Ø‡µÜ‡¥ô‡µç‡¥ï‡¥ø‡¥≤‡µÅ‡¥Ç ‡¥Ö‡¥®‡¥ï‡µç‡¥ï‡¥Ç ‡¥â‡¥£‡µç‡¥ü‡¥æ‡¥µ‡µÅ‡¥Ç. ‡¥ï‡µÇ‡¥ü‡µÅ‡¥§‡µΩ ‡¥ï‡µÅ‡¥ü‡µç‡¥ü‡¥ø‡¥ï‡¥≥‡µÅ‡¥Ç, ‡¥µ‡µà‡¥ï‡µÅ‡¥®‡µç‡¥®‡µá‡¥∞‡¥ô‡µç‡¥ô‡¥≥‡¥ø‡¥≤‡¥æ‡¥£‡µç ‡¥ï‡µÇ‡¥ü‡µÅ‡¥§‡µΩ ‡¥ä‡µº‡¥ú‡µç‡¥ú‡¥∏‡µç‡¥µ‡¥≤‡¥Æ‡¥æ‡¥Ø‡¥ø ‡¥ï‡¥æ‡¥£‡¥™‡µç‡¥™‡µÜ‡¥ü‡µÅ‡¥ï.",
//     "",
//     "",
//   ],
// };
const repoData = {
  "heading": "‡¥™‡µÅ‡¥±‡¥Ç‡¥µ‡µá‡¥¶‡¥® ‡¥í‡¥¥‡¥ø‡¥µ‡¥æ‡¥ï‡µç‡¥ï‡¥æ‡¥®‡µÅ‡¥≥‡µç‡¥≥ ‡¥Æ‡¥æ‡µº‡¥ó‡¥ô‡µç‡¥ô‡µæ",
  "contents": [
    "‡¥®‡¥ø‡¥ô‡µç‡¥ô‡µæ‡¥ï‡µç‡¥ï‡µç ‡¥é‡¥µ‡¥ø‡¥ü‡µÜ‡¥Ø‡µÜ‡¥ô‡µç‡¥ï‡¥ø‡¥≤‡µÅ‡¥Ç ‡¥Ö‡¥ß‡¥ø‡¥ï‡¥®‡µá‡¥∞‡¥Ç ‡¥®‡¥ø‡µΩ‡¥ï‡µç‡¥ï‡µá‡¥£‡µç‡¥ü‡¥ø ‡¥µ‡¥®‡µç‡¥®‡¥æ‡µΩ, ‡¥â‡¥Ø‡¥∞‡¥Ç ‡¥µ‡¥≥‡¥∞‡µÜ ‡¥ï‡µÅ‡¥±‡¥µ‡µÅ‡¥≥‡µç‡¥≥ ‡¥í‡¥∞‡µÅ ‡¥∏‡µç‡¥±‡µç‡¥±‡µÇ‡¥≥‡¥ø‡µΩ, ‡¥í‡¥∞‡µÅ ‡¥™‡¥æ‡¥¶‡¥Ç ‡¥â‡¥Ø‡µº‡¥§‡µç‡¥§‡¥ø‡¥µ‡¥ö‡µç‡¥ö‡µç ‡¥®‡¥ø‡µΩ‡¥ï‡µç‡¥ï‡¥æ‡¥Ç. ‡¥á‡¥§‡µç ‡¥∏‡¥Æ‡µç‡¥Æ‡µº‡¥¶‡µç‡¥¶‡¥Ç ‡¥ï‡µÅ‡¥±‡¥Ø‡µç‡¥ï‡µç‡¥ï‡¥æ‡µª ‡¥∏‡¥π‡¥æ‡¥Ø‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥Ç.",
    "‡¥é‡¥≤‡µç‡¥≤‡¥æ‡¥Ø‡µç‡¥™‡µç‡¥™‡µã‡¥¥‡µÅ‡¥Ç ‡¥ï‡¥∏‡µá‡¥∞‡¥Ø‡¥ø‡µΩ ‡¥ö‡¥æ‡¥û‡µç‡¥û‡¥ø‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡¥§‡µç ‡¥Æ‡µÅ‡¥§‡µÅ‡¥ï‡¥ø‡¥®‡µç ‡¥í‡¥∞‡µÅ ‡¥§‡¥æ‡¥ô‡µç‡¥ô‡µç ‡¥≤‡¥≠‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥µ‡¥æ‡µª ‡¥®‡¥≤‡µç‡¥≤‡¥§‡¥æ‡¥£‡µç. ‡¥Ö‡¥≤‡µç‡¥≤‡¥æ‡¥§‡µç‡¥§‡¥™‡¥ï‡µç‡¥∑‡¥Ç ‡¥™‡µÅ‡¥±‡¥ï‡¥ø‡µΩ ‡¥í‡¥∞‡µÅ ‡¥§‡¥≤‡¥Ø‡¥£ ‡¥µ‡µÜ‡¥ö‡µç‡¥ö‡µç ‡¥ö‡¥æ‡¥∞‡¥ø ‡¥á‡¥∞‡¥ø‡¥ï‡µç‡¥ï‡µÅ‡¥ï.",
    "‡¥µ‡µá‡¥¶‡¥® ‡¥µ‡¥≤‡µç‡¥≤‡¥æ‡¥§‡µÜ ‡¥µ‡¥∑‡¥≥‡¥æ‡¥Ø‡¥æ‡µΩ, ‡¥ö‡µÇ‡¥ü‡µÅ‡¥µ‡µÜ‡¥≥‡µç‡¥≥‡¥Ç ‡¥®‡¥ø‡¥±‡¥ö‡µç‡¥ö‡µç ‡¥ï‡µÅ‡¥™‡µç‡¥™‡¥ø‡¥Ø‡µã, ‡¥ê‡¥∏‡µç ‡¥®‡¥ø‡¥±‡¥ö‡µç‡¥ö ‡¥∏‡¥û‡µç‡¥ö‡¥ø‡¥Ø‡µã ‡¥µ‡µá‡¥¶‡¥®‡¥Ø‡µÅ‡¥≥‡µç‡¥≥ ‡¥∏‡µç‡¥•‡¥≤‡¥§‡µç‡¥§‡µç ‡¥µ‡µÜ‡¥ö‡µç‡¥ö‡µÅ ‡¥ï‡µä‡¥ü‡µÅ‡¥ï‡µç‡¥ï‡µÅ‡¥®‡µç‡¥®‡¥§‡µç ‡¥Ü‡¥∂‡µç‡¥µ‡¥æ‡¥∏‡¥ï‡¥∞‡¥Æ‡¥æ‡¥£‡µç.",
    "‡¥≠‡µº‡¥§‡µç‡¥§‡¥æ‡¥µ‡¥ø‡¥®‡µã‡¥ü‡µç ‡¥Æ‡µÅ‡¥§‡µÅ‡¥ï‡µç ‡¥§‡¥ü‡¥µ‡¥ø‡¥§‡µç‡¥§‡¥∞‡¥æ‡µª ‡¥™‡¥±‡¥Ø‡µÅ‡¥ï.",
    "‡¥®‡¥ø‡¥ô‡µç‡¥ô‡¥≥‡µÅ‡¥ü‡µÜ ‡¥°‡µã‡¥ï‡µç‡¥ü‡¥±‡µã‡¥ü‡µç, ‡¥ó‡µº‡¥≠‡¥§‡µç‡¥§‡¥ø‡¥®‡µç ‡¥¶‡µã‡¥∑‡¥ï‡¥∞‡¥Æ‡¥≤‡µç‡¥≤‡¥æ‡¥§‡µç‡¥§ ‡¥µ‡µá‡¥¶‡¥®‡¥∏‡¥Ç‡¥π‡¥æ‡¥∞‡¥ø‡¥ï‡µæ ‡¥Ü‡¥µ‡¥∂‡µç‡¥Ø‡¥™‡µç‡¥™‡µÜ‡¥ü‡¥æ‡¥Ç."
  ]
};
